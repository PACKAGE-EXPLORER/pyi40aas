# Copyright (c) 2020 PyI40AAS Contributors
#
# This program and the accompanying materials are made available under the terms of the Eclipse Public License v. 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0 which is available
# at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0

image: python:3.6

stages:
  - build
  - test
  - package
  - deploy

# Change pip's package cache directory to be inside the project directory to allow caching via Gitlab CI
variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
cache:
  paths:
    - .cache/pip

before_script:
  - python -V               # Print out python version for debugging

# Run python unittests (and report coverage)
test:
  stage: test
  only: [branches, tags, merge_requests]
  inherit:
    variables: ["PIP_CACHE_DIR"]
  variables:
    COUCHDB_USER: "admin"
    COUCHDB_PASSWORD: "yo0Quai3"
  services:
    - couchdb:2.3

  script:
  # Install python testing dependencies
  - pip install --cache-dir="$PIP_CACHE_DIR" unittest-xml-reporting coverage
  - pip install --cache-dir="$PIP_CACHE_DIR" -r requirements.txt
  # Setup test config and CouchDB database server
  - echo -e "[couchdb]\nurl = http://couchdb:5984\n" > test/test_config.ini
  - python test/_helper/setup_testdb.py -u "$COUCHDB_USER" -p "$COUCHDB_PASSWORD"
  # Add source directory to PYTHONPATH to allow testing our CLI scripts, which import our modules
  - export PYTHONPATH=".:$PYTHONPATH"
  # Run tests
  - coverage run --source aas --branch -m xmlrunner -o testreports
  # Report test coverage
  - coverage report -m

  artifacts:
    reports:
      junit: testreports/*.xml


# Run static code analysis with MyPy and PyCodestyle
static_analysis:
  stage: test
  only: [branches, tags, merge_requests]
  inherit:
    variables: ["PIP_CACHE_DIR"]

  script:
    # Install python testing dependencies
    - pip install --cache-dir="$PIP_CACHE_DIR" mypy pycodestyle
    - pip install --cache-dir="$PIP_CACHE_DIR" -r requirements.txt
    # Check typing und code style
    - mypy aas test
    # - pycodestyle --count --max-line-length 120 aas test


# Use setup.py to build a source distribution package
package:
  stage: package

  script:
    - python setup.py sdist

  artifacts:
    paths:
      - dist/*.tar.gz


# Publish package to PyPI for every vX.X.X tag
publish:
  stage: deploy
  only:
    - /^v\d+(\.\d+)*$/
  except:
    - branches
  dependencies:
    - package

  script:
    - pip install --cache-dir="$PIP_CACHE_DIR" twine
    - twine upload dist/*.tar.gz
